variables:
  TF_CLI_ARGS_init: "-lockfile=readonly"
  TF_VAR_pve_api_url: ${PVE_API_URL}
  TF_VAR_pve_user: ${PVE_USER}
  TF_VAR_pve_password: ${PVE_PASSWORD}
  TSFILE: "tailscale_1.28.0_amd64.tgz"

include:
  - component: $CI_SERVER_FQDN/components/opentofu/job-templates@0.23.0
    inputs:
      version: 0.23.0
      opentofu_version: 1.7.2
      root_dir: homelab/opentofu/proxmoxve/trinity-helios
      state_name: latest_trinity_helios_pve
      auto_apply: true

stages: [validate, build, deploy, cleanup]

.optofu_changes: &optofu_changes
  - if: $CI_PIPELINE_SOURCE == "web"
  - if: $CI_PIPELINE_SOURCE == "api"
  - changes:
    - homelab/opentofu/proxmoxve/trinity-helios/**/*

.setup_tailscale: &setup_tailscale
  - apk add --no-cache iptables ip6tables curl
  - cd /usr/local/bin
  - wget https://pkgs.tailscale.com/stable/${TSFILE} -O /tmp/${TSFILE}
  - tar xzf /tmp/${TSFILE} --strip-components=1
  - rm /tmp/${TSFILE}
  - mkdir -p /var/run/tailscale
  - |
    tailscaled --state=mem: &
  - tailscale up --authkey=${TAILSCALE_AUTHKEY} --hostname="gitlab-ci-${CI_JOB_ID}" --accept-dns --accept-routes
  
fmt:
  extends: [.opentofu:fmt]
  rules:
    - *optofu_changes

validate:
  extends: [.opentofu:validate]
  rules:
    - *optofu_changes
  
plan:
  extends: [.opentofu:plan]
  rules:
    - *optofu_changes
  before_script:
    - *setup_tailscale

apply:
  extends: [.opentofu:apply]
  rules:
    - *optofu_changes
  before_script:
    - *setup_tailscale
  retry: 1
    
destroy:
  extends: [.opentofu:destroy]
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "api"
    - changes:
        - homelab/opentofu/proxmoxve/trinity-helios/**/*
      when: manual
  before_script:
    - *setup_tailscale
  allow_failure: true
