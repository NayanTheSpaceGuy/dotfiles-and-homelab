---
- name: Check if VM {{ truenas_core_vm_id }} exists
  ansible.builtin.shell: |
    pvesh get /cluster/resources --type vm | awk '{print $2}' | grep -q "qemu/{{ truenas_core_vm_id }}$" && echo true || echo false
  register: truenas_core_vm_tmpl_check
  changed_when: false

- name: Set fact for VM existence
  ansible.builtin.set_fact:
    truenas_core_vm_tmpl_exists: "{{ truenas_core_vm_tmpl_check.stdout | bool }}"

- name: Delete existing VM template if it exists
  ansible.builtin.shell: >
    qm destroy {{ truenas_core_vm_id }}
  when: truenas_core_vm_tmpl_exists
  ignore_errors: true

- name: Create TrueNAS Core VM template
  block:
    - name: Check if the downloaded image exists
      ansible.builtin.stat:
        path: "/var/lib/vz/template/iso/{{ truenas_core_image_name }}"
      register: truenas_core_image_file

    - name: Download TrueNAS Core iso
      ansible.builtin.get_url:
        url: "{{ truenas_core_image_url }}"
        dest: "/var/lib/vz/template/iso/{{ truenas_core_image_name }}"
      when: not truenas_core_image_file.stat.exists

    - name: Create new virtual machine
      ansible.builtin.shell: >
        qm create {{ truenas_core_vm_id }} --memory 2048 --core 2 --name {{ truenas_core_vm_name }} --net0 virtio,bridge=vmbr0

    - name: Check if ZFS volume exists
      ansible.builtin.shell: >
        zfs list rpool/data/base-{{ truenas_core_vm_id }}-disk-0
      register: zfs_check
      failed_when: false
      changed_when: false

    - name: Create ZFS volume for VM disk
      ansible.builtin.shell: >
        zfs create -V 32G rpool/data/base-{{ truenas_core_vm_id }}-disk-0
      when: zfs_check.rc != 0

    - name: Add new scsi drive
      ansible.builtin.shell: >
        qm set {{ truenas_core_vm_id }} --scsihw virtio-scsi-pci --scsi0 {{ storage }}:base-{{ truenas_core_vm_id }}-disk-0

    - name: Attach CD-ROM with TrueNAS iso
      ansible.builtin.shell: >
        qm set {{ truenas_core_vm_id }} --ide2 local:iso/{{ truenas_core_image_name }},media=cdrom

    - name: Set boot order
      ansible.builtin.shell: >
        qm set {{ truenas_core_vm_id }} --boot order="scsi0;ide2"

    - name: Set autostart on boot
      ansible.builtin.shell: >
        qm set {{ truenas_core_vm_id }} --onboot true

    - name: Enable qemu guest agent
      ansible.builtin.shell: >
        qm set {{ truenas_core_vm_id }} --agent enabled=1

    - name: Convert to template
      ansible.builtin.shell: >
        qm template {{ truenas_core_vm_id }}

- name: Verify VM template exists
  ansible.builtin.shell: |
    pvesh get /cluster/resources --type vm | awk '{print $2}' | grep -q "qemu/{{ truenas_core_vm_id }}$" && echo true || echo false
  register: final_truenas_core_vm_tmpl_check
  changed_when: false

- name: Fail if VM template does not exist
  ansible.builtin.fail:
    msg: "VM template {{ truenas_core_vm_id }} was not created successfully"
  when: not (final_truenas_core_vm_tmpl_check.stdout | bool)
