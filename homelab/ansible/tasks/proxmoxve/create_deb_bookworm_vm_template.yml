---
- name: Check if VM {{ deb_bookworm_vm_id }} exists
  ansible.builtin.shell: |
    pvesh get /cluster/resources --type vm | awk '{print $2}' | grep -q "qemu/{{ deb_bookworm_vm_id }}$" && echo true || echo false
  register: deb_bookworm_vm_tmpl_check
  changed_when: false

- name: Set fact for VM existence
  ansible.builtin.set_fact:
    deb_bookworm_vm_tmpl_exists: "{{ deb_bookworm_vm_tmpl_check.stdout | bool }}"

- name: Delete existing VM template if it exists
  ansible.builtin.shell: >
    qm destroy {{ deb_bookworm_vm_id }}
  when: deb_bookworm_vm_tmpl_exists
  ignore_errors: true

- name: Create Debian Bookworm VM template
  block:
    - name: Check if the downloaded image exists
      ansible.builtin.stat:
        path: "/var/lib/vz/images/{{ deb_bookworm_image_name }}"
      register: deb_bookworm_image_file

    - name: Download Debian cloud image
      ansible.builtin.get_url:
        url: "{{ deb_bookworm_image_url }}"
        dest: "/var/lib/vz/images/{{ deb_bookworm_image_name }}"
      when: not deb_bookworm_image_file.stat.exists

    - name: Create new virtual machine
      ansible.builtin.shell: >
        qm create {{ deb_bookworm_vm_id }} --memory 2048 --core 2 --name {{ deb_bookworm_vm_name }} --net0 virtio,bridge=vmbr0

    - name: Import the downloaded Debian Bookworm disk
      ansible.builtin.shell: >
        qm disk import {{ deb_bookworm_vm_id }} /var/lib/vz/images/{{ deb_bookworm_image_name }} {{ storage }}

    - name: Attach the new disk to the VM
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --scsihw virtio-scsi-pci --scsi0 {{ storage }}:vm-{{ deb_bookworm_vm_id }}-disk-0

    - name: Add cloud init drive
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --ide2 {{ storage }}:cloudinit

    - name: Make the cloud init drive bootable
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --boot c --bootdisk scsi0

    - name: Add serial console
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --serial0 socket --vga serial0

    - name: Set autostart on boot
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --onboot true

    - name: Enable qemu guest agent
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --agent enabled=1

    - name: Set cloud init user
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --ciuser ntsa

    - name: Configure cloud init network
      ansible.builtin.shell: >
        qm set {{ deb_bookworm_vm_id }} --ipconfig0 ip=dhcp,ip6=dhcp

    - name: Convert to template
      ansible.builtin.shell: >
        qm template {{ deb_bookworm_vm_id }}

- name: Verify VM template exists
  ansible.builtin.shell: |
    pvesh get /cluster/resources --type vm | awk '{print $2}' | grep -q "qemu/{{ deb_bookworm_vm_id }}$" && echo true || echo false
  register: final_deb_bookworm_vm_tmpl_check
  changed_when: false

- name: Fail if VM template does not exist
  ansible.builtin.fail:
    msg: "VM template {{ deb_bookworm_vm_id }} was not created successfully"
  when: not (final_deb_bookworm_vm_tmpl_check.stdout | bool)
